USE restaurant_db;

-- 1. View the menu_items table
SELECT * FROM MENU_ITEMS;

-- 2. Write a query to find the number of items on the menu
SELECT COUNT(MENU_ITEM_ID) AS No_of_items FROM MENU_ITEMS;

-- 3. What are the least and most expensive items on the menu?
SELECT ITEM_NAME AS MOST_EXPENSIVE_ITEM,PRICE FROM MENU_ITEMS
ORDER BY PRICE DESC
LIMIT 1;

SELECT ITEM_NAME AS LEAST_EXPENSIVE_ITEM,PRICE FROM MENU_ITEMS
ORDER BY PRICE
LIMIT 1;

-- 4. How many Italian dishes are on the menu? 
SELECT COUNT(MENU_ITEM_ID) AS NO_OF_ITALIAN_DISHES FROM MENU_ITEMS
WHERE CATEGORY="ITALIAN";

-- 5. What are the least and most expensive Italian dishes on the menu?
SELECT ITEM_NAME AS MOST_EXPENSIVE_ITALIAN_DISH,PRICE FROM MENU_ITEMS
WHERE CATEGORY="ITALIAN"
ORDER BY PRICE DESC
LIMIT 1;

SELECT ITEM_NAME AS LEAST_EXPENSIVE_ITALIAN_DISH,PRICE FROM MENU_ITEMS
WHERE CATEGORY="ITALIAN"
ORDER BY PRICE
LIMIT 1;

-- 6. How many dishes are in each category? 
SELECT CATEGORY,COUNT(MENU_ITEM_ID) AS NO_OF_DISHES 
FROM MENU_ITEMS
GROUP BY CATEGORY;

-- 7. What is the average dish price within each category?
SELECT CATEGORY,AVG(PRICE) AS AVG_DISH_PRICE 
FROM MENU_ITEMS
GROUP BY CATEGORY;

-- 8. View the order_details table. 
SELECT * FROM ORDER_DETAILS;

-- 9. What is the date range of the table?
SELECT CONCAT(MIN(ORDER_DATE), " : ", MAX(ORDER_DATE)) AS DATE_RANGE FROM ORDER_DETAILS;

-- 10. How many orders were made within this date range?
SELECT COUNT(DISTINCT ORDER_ID) AS ORDERS_MADE FROM ORDER_DETAILS;

-- 11. How many items were ordered within this date range?
SELECT COUNT(ITEM_ID) AS ITEMS_ORDERED FROM ORDER_DETAILS;

-- 12. Which orders had the most number of items?
SELECT ORDER_ID,COUNT(ITEM_ID) AS NO_OF_ITEMS
FROM ORDER_DETAILS
GROUP BY ORDER_ID
ORDER BY NO_OF_ITEMS DESC;

-- 13. How many orders had more than 12 items?
SELECT ORDER_ID,COUNT(ITEM_ID) AS NO_OF_ITEMS
FROM ORDER_DETAILS
GROUP BY ORDER_ID
HAVING NO_OF_ITEMS>12;

-- 14. Combine the menu_items and order_details tables into a single table
SELECT * 
FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
		ON OD.ITEM_ID=MI.MENU_ITEM_ID;
        
-- 15. What were the least and most ordered items? What categories were they in?
SELECT ITEM_NAME AS MOST_ORDERED_ITEM,CATEGORY,COUNT(ORDER_DETAILS_ID) AS NO_OF_PURCHASES
FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
		ON OD.ITEM_ID=MI.MENU_ITEM_ID
GROUP BY ITEM_NAME,CATEGORY
ORDER BY NO_OF_PURCHASES DESC
LIMIT 1;

SELECT ITEM_NAME AS LEAST_ORDERED_ITEM,CATEGORY,COUNT(ORDER_DETAILS_ID) AS NO_OF_PURCHASES
FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
		ON OD.ITEM_ID=MI.MENU_ITEM_ID
GROUP BY ITEM_NAME,CATEGORY
ORDER BY NO_OF_PURCHASES
LIMIT 1;

-- 16. What were the top 5 orders that spent the most money?
SELECT ORDER_ID,SUM(PRICE) AS MOST_MONEY_SPENT
FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
		ON OD.ITEM_ID=MI.MENU_ITEM_ID
GROUP BY ORDER_ID
ORDER BY MOST_MONEY_SPENT DESC
LIMIT 5;

-- 17. View the details of the highest spend order. Which specific items were purchased?
SELECT ORDER_ID,CATEGORY,ITEM_NAME,COUNT(ITEM_ID) ITEMS_PURCHASE
FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
		ON OD.ITEM_ID=MI.MENU_ITEM_ID
WHERE ORDER_ID=(
		SELECT ORDER_ID
        FROM ORDER_DETAILS OD LEFT JOIN MENU_ITEMS MI
				ON OD.ITEM_ID=MI.MENU_ITEM_ID
		GROUP BY ORDER_ID
        ORDER BY SUM(PRICE) DESC
        LIMIT 1)
GROUP BY ORDER_ID,CATEGORY,ITEM_NAME
ORDER BY ITEMS_PURCHASE DESC;

-- 18. BONUS: View the details of the top 5 highest spend orders
SELECT *
FROM ORDER_DETAILS OD 
LEFT JOIN MENU_ITEMS MI ON OD.ITEM_ID = MI.MENU_ITEM_ID
WHERE ORDER_ID IN (
    SELECT ORDER_ID
    FROM (
        SELECT OD.ORDER_ID
        FROM ORDER_DETAILS OD 
        LEFT JOIN MENU_ITEMS MI ON OD.ITEM_ID = MI.MENU_ITEM_ID
        GROUP BY OD.ORDER_ID
        ORDER BY SUM(MI.PRICE) DESC
        LIMIT 5
    ) AS top_orders
);

-- 19. Were there certain times that had more or less orders?
SELECT ORDER_TIME,COUNT(ORDER_ID) ORDERS
FROM ORDER_DETAILS
GROUP BY ORDER_TIME
ORDER BY ORDERS DESC;

-- 20. Were there certain dates that had more or less orders?
SELECT ORDER_DATE,COUNT(ORDER_ID) ORDERS
FROM ORDER_DETAILS
GROUP BY ORDER_DATE
ORDER BY ORDERS DESC;

        


